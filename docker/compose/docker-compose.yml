#  Copyright 2021 Collate
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

version: "3.9"
services:
  mysql:
    image: mysql/mysql-server:latest
    hostname: mysql.example.com
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: "%"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 1s
      timeout: 3s
      retries: 60
    volumes:
      - ./scripts/mysql/:/docker-entrypoint-initdb.d/
    ports:
      - "3306:3306"
    networks:
      - om

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    hostname: elasticsearch.example.com
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - om

  openmetadata:
    build:
      context: ../..
      dockerfile: docker/compose/Dockerfile
      target: openmetadata
    image: openmetadata:latest
    hostname: openmetadata.example.com
    container_name: openmetadata
    environment:
      - "ELASTICSEARCH_HOST=elasticsearch.example.com"
      - "MYSQL_HOST=mysql.example.com"
      - "AIRFLOW_HOST=airflow.example.com"
      - "SERVER_HOST=openmetadata.example.com"
    healthcheck:
      test: [ "CMD", "curl" ,"-f", "http://localhost:8585/api/v1/tables" ]
      interval: 1s
      timeout: 3s
      retries: 60
    restart: unless-stopped
    ports:
      - "8585:8585"
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    volumes:
      - .:/docker-compose
    entrypoint: /docker-compose/scripts/openmetadata/run.sh
    networks:
      - om

#  metadata:
#    build:
#      context: ../..
#      dockerfile: docker/compose/Dockerfile
#      target: metadata
#    image: metadata:latest
#    container_name: metadata
#    hostname: metadata.example.com
#    volumes:
#      - .:/docker-compose
#    entrypoint: /docker-compose/scripts/metadata/run.sh
#    networks:
#      - om

#  airflow:
#    build:
#      context: ../..
#      dockerfile: docker/compose/Dockerfile
#      target: airflow
#    image: airflow:latest
#    container_name: airflow
#    hostname: airflow.example.com
#    depends_on:
#      mysql:
#        condition: service_healthy
#    ports:
#      - "8080:8080"
#    volumes:
#      - .:/docker-compose
#    entrypoint: /docker-compose/scripts/airflow/run.sh
#    networks:
#      - om

  pytests:
    build:
      context: ../..
      dockerfile: docker/compose/Dockerfile
      target: pytests
    hostname: pytests.example.com
    container_name: pytests
    depends_on:
      openmetadata:
        condition: service_healthy
    volumes:
      - .:/docker-compose
    entrypoint: /docker-compose/scripts/pytests/run.sh
    networks:
      - om

networks:
  om: